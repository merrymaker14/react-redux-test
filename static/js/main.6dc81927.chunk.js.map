{"version":3,"sources":["logo.svg","theme/globalStyle.js","theme/variables.js","theme/animations.js","components/Header.jsx","redux/actionTypes/index.js","redux/actions/users.js","components/Loader.jsx","components/UsersList.jsx","App.js","redux/saga/users.js","redux/saga/index.js","redux/reducers/users.js","redux/reducers/error.js","redux/reducers/index.js","redux/store/index.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","createGlobalStyle","_templateObject","spin","keyframes","animations_templateObject","ellipsis1","_templateObject2","ellipsis3","_templateObject3","ellipsis2","_templateObject4","Wrapper","styled","header","Header_templateObject","Image","img","Header_templateObject2","Header","react_default","a","createElement","src","logo","alt","ADD_USERS_SUCCESS","ADD_USERS_FAILURE","FETCH_USERS","addUsersSuccess","users","type","addUsersFailure","error","div","Loader_templateObject","Loader","Loader_Wrapper","List","ul","UsersList_templateObject","connect","_ref2","dispatch","onFetchUsers","props","React","length","react","map","_ref","id","name","key","components_Loader","AppWrapper","App_templateObject","Content","App_templateObject2","App","globalStyle","components_Header","components_UsersList","fetchUsers","watchFetchUsers","usersSaga","getUsers","Object","asyncToGenerator","regenerator_default","mark","_callee","res","usersData","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","apply","this","arguments","_context2","call","put","console","log","t0","message","_marked","_context3","takeLatest","_marked2","_context4","all","fork","_marked3","rootSaga","root","t1","t2","initialState","combineReducers","state","undefined","action","concat","toConsumableArray","sagaMiddleware","createSagaMiddleware","middleware","storeEnhancers","applyMiddleware","store","createStore","rootReducer","run","Boolean","window","location","hostname","match","Component","rootEl","document","getElementById","render","es","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6dc81927.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import { createGlobalStyle } from 'styled-components';\r\nimport { bgColor, mainColor, fontSize } from './variables';\r\n\r\nexport default createGlobalStyle`\r\n  @import url('https://fonts.googleapis.com/css?family=Lora:400,700&amp;subset=cyrillic');\r\n\r\n  *,\r\n  *::before,\r\n  *::after {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  html {\r\n    box-sizing: border-box;\r\n    height: 100%;\r\n    margin: 0;\r\n    padding: 0;\r\n    /* font-size: 62.5%; */\r\n  }\r\n\r\n  body {\r\n    position: relative;\r\n    min-width: 320px;\r\n    min-height: 100%;\r\n    margin: 0;\r\n    padding: 0;\r\n    font-size: ${fontSize};\r\n    font-weight: bold;\r\n    line-height: 1.2;\r\n    color: ${mainColor};\r\n    font-family: Lora, serif;\r\n    background-color: ${bgColor};\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4 {\r\n    margin: 0;\r\n  }\r\n\r\n  figure {\r\n    margin: 0;\r\n  }\r\n\r\n  li {\r\n    list-style-type: none;\r\n  }\r\n\r\n  img {\r\n    max-width: 100%;\r\n    height: auto;\r\n  }\r\n\r\n  a {\r\n    outline: 0;\r\n    text-decoration: none;\r\n    color: ${mainColor};\r\n\r\n    &:hover {\r\n      text-decoration: none;\r\n    }\r\n  }\r\n\r\n  label {\r\n    user-select: none;\r\n  }\r\n\r\n  input {\r\n    outline: none;\r\n  }\r\n\r\n  button {\r\n    cursor: pointer;\r\n\r\n    &:disabled {\r\n      cursor: default;\r\n    }\r\n  }\r\n`;\r\n","/* @flow */\r\n\r\nexport const bgColor: string = '#0e0e0e;';\r\nexport const mainColor: string = '#282c34';\r\nexport const secondaryColor: string = '#eaeff2';\r\nexport const white: string = '#fff';\r\n\r\nexport const fontSize: string = '16px';\r\nexport const fontSizeSmall: string = '14px';\r\n\r\nexport const sSize: string = '8px';\r\nexport const mSize: string = '14px';\r\nexport const lSize: string = '24px';\r\nexport const xlSize: string = '36px';\r\n","import { keyframes } from 'styled-components';\r\n\r\nexport const spin = keyframes`\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nexport const ellipsis1 = keyframes`\r\n  0% {\r\n    transform: scale(0);\r\n  }\r\n  100% {\r\n    transform: scale(1);\r\n  }\r\n`;\r\n\r\nexport const ellipsis3 = keyframes`\r\n  0% {\r\n    transform: scale(1);\r\n  }\r\n  100% {\r\n    transform: scale(0);\r\n  }\r\n`;\r\n\r\nexport const ellipsis2 = keyframes`\r\n  0% {\r\n    transform: translate(0, 0);\r\n  }\r\n  100% {\r\n    transform: translate(19px, 0);\r\n  }\r\n`;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { spin } from '../theme/animations';\r\nimport {\r\n  mainColor, white, lSize, sSize,\r\n} from '../theme/variables';\r\nimport logo from '../logo.svg';\r\n\r\nconst Wrapper = styled.header`\r\n  width: 100%;\r\n  padding-top: ${sSize};\r\n  padding-bottom: ${lSize};\r\n  background-color: ${mainColor};\r\n  color: ${white};\r\n  text-align: center;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 100px;\r\n  height: 100px;\r\n  animation: ${spin} infinite 20s linear;\r\n`;\r\n\r\nconst Header = () => (\r\n  <Wrapper>\r\n    <Image src={logo} alt=\"logo\" />\r\n    <h2>React Content Manager</h2>\r\n  </Wrapper>\r\n);\r\n\r\nexport default Header;\r\n","export const ADD_USERS_SUCCESS = 'ADD_USERS_SUCCESS';\r\nexport const ADD_USERS_FAILURE = 'ADD_USERS_FAILURE';\r\nexport const FETCH_USERS = 'FETCH_USERS';\r\n","import {\r\n  FETCH_USERS, ADD_USERS_SUCCESS, ADD_USERS_FAILURE,\r\n} from '../actionTypes';\r\n\r\nexport const addUsersSuccess = users => ({\r\n  type: ADD_USERS_SUCCESS,\r\n  users,\r\n});\r\n\r\nexport const addUsersFailure = error => ({\r\n  type: ADD_USERS_FAILURE,\r\n  error,\r\n});\r\n\r\nexport const fetchUsers = () => ({\r\n  type: FETCH_USERS,\r\n});\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { mainColor } from '../theme/variables';\r\nimport { ellipsis1, ellipsis2, ellipsis3 } from '../theme/animations';\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  width: 64px;\r\n  height: 64px;\r\n  margin: 0 auto;\r\n\r\n  & div {\r\n    position: absolute;\r\n    top: 27px;\r\n    width: 11px;\r\n    height: 11px;\r\n    border-radius: 50%;\r\n    background-color: ${mainColor};\r\n    animation-timing-function: cubic-bezier(0, 1, 1, 0);\r\n\r\n    &:nth-child(1) {\r\n      left: 6px;\r\n      animation: ${ellipsis1} 0.6s infinite;\r\n    }\r\n\r\n    &:nth-child(2) {\r\n      left: 6px;\r\n      animation: ${ellipsis2} 0.6s infinite;\r\n    }\r\n\r\n    &:nth-child(3) {\r\n      left: 26px;\r\n      animation: ${ellipsis2} 0.6s infinite;\r\n    }\r\n\r\n    &:nth-child(4) {\r\n      left: 45px;\r\n      animation: ${ellipsis3} 0.6s infinite;\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nconst Loader = () => (\r\n  <Wrapper><div /><div /><div /><div /></Wrapper>\r\n);\r\n\r\nexport default Loader;\r\n","/* @flow */\r\n\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { mainColor, secondaryColor, mSize, sSize } from '../theme/variables';\r\nimport { fetchUsers } from '../redux/actions/users';\r\nimport Loader from './Loader';\r\n\r\nconst List = styled.ul`\r\n  margin: 0 auto;\r\n  padding: ${mSize};\r\n  color: ${mainColor};\r\n\r\n  li {\r\n    margin-bottom: ${sSize};\r\n    border: 1px solid ${mainColor};\r\n    padding: ${sSize};\r\n    background-color: ${secondaryColor};\r\n  }\r\n`;\r\n\r\ntype UsersListProps = { \r\n  onFetchUsers: () => {\r\n    type: string;\r\n  }, \r\n  users: Array<{\r\n    id: number,\r\n    name: string\r\n  }>\r\n};  \r\n\r\nexport const UsersList = (props: UsersListProps) => {\r\n  const { onFetchUsers, users } = props;\r\n\r\n  React.useEffect(() => {\r\n    if (users.length === 0)\r\n      onFetchUsers();\r\n  }, []);\r\n\r\n  return (\r\n    <List>\r\n      {\r\n        users.length > 0 ? users.map(({ id, name }) => (\r\n          <li key={id}>{name}</li>\r\n        ))\r\n          : <Loader />\r\n      }\r\n    </List>\r\n  );\r\n};\r\n\r\nUsersList.propTypes = {\r\n  users: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n  })).isRequired,\r\n  onFetchUsers: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({ users }) => ({\r\n  users\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onFetchUsers: () => dispatch(fetchUsers()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersList);\r\n","import React, { Fragment } from 'react';\r\nimport styled from 'styled-components';\r\nimport GlobalStyle from './theme/globalStyle';\r\nimport { white } from './theme/variables';\r\nimport Header from './components/Header';\r\nimport UsersList from './components/UsersList';\r\n\r\nconst AppWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  width: 600px;\r\n  min-height: 400px;\r\n  margin-left: 20px;\r\n  margin0-right: 20px;\r\n  background-color: ${white};\r\n`;\r\n\r\nconst App = () => {\r\n  return (\r\n    <Fragment>\r\n      <GlobalStyle />\r\n      <AppWrapper>\r\n        <Content>\r\n          <Header />\r\n          <UsersList />\r\n        </Content>\r\n      </AppWrapper>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default App;\r\n","import {\r\n  call, put, fork, takeLatest, all,\r\n} from 'redux-saga/effects';\r\nimport { addUsersSuccess, addUsersFailure } from '../actions/users';\r\nimport { FETCH_USERS } from '../actionTypes';\r\n\r\nconst endpoint = 'https://jsonplaceholder.typicode.com/users';\r\n\r\nexport const getUsers = async () => {\r\n  const res = await fetch(endpoint);\r\n  const usersData = await res.json();\r\n  const users = usersData.map(({ id, name }) => ({ id, name }));\r\n  return users;\r\n};\r\n\r\nexport function* fetchUsers() {\r\n  try {\r\n    const users = yield call(getUsers);\r\n    if (users) {\r\n      yield put(addUsersSuccess(users));\r\n    } else {\r\n      console.log('No such document!');\r\n    }\r\n  } catch (error) {\r\n    yield put(addUsersFailure(error.message));\r\n  }\r\n}\r\n\r\nexport function* watchFetchUsers() {\r\n  yield takeLatest(FETCH_USERS, fetchUsers);\r\n}\r\n\r\nexport default function* usersSaga() {\r\n  yield all([\r\n    fork(watchFetchUsers),\r\n  ]);\r\n}","import { all, fork } from 'redux-saga/effects';\r\nimport usersSaga from './users';\r\n\r\nconst rootSaga = function* root() {\r\n  yield all([\r\n    yield fork(usersSaga),\r\n  ]);\r\n};\r\n\r\nexport default rootSaga;\r\n","import { ADD_USERS_SUCCESS } from '../actionTypes';\r\n\r\nconst initialState = [];\r\n\r\nexport default function users(state = initialState, action) {\r\n  switch (action.type) {\r\n  case ADD_USERS_SUCCESS:\r\n    return [\r\n      ...state,\r\n      ...action.users,\r\n    ];\r\n  default:\r\n    return state;\r\n  }\r\n}\r\n","import { ADD_USERS_FAILURE } from '../actionTypes';\r\n\r\nconst initialState = '';\r\n\r\nexport default function users(state = initialState, action) {\r\n  switch (action.type) {\r\n  case ADD_USERS_FAILURE:\r\n    return action.error;\r\n  default:\r\n    return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport users from './users';\r\nimport error from './error';\r\n\r\nexport default combineReducers({\r\n  users,\r\n  error,\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from '../saga';\r\n\r\nimport rootReducer from '../reducers';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middleware = [sagaMiddleware];\r\n\r\nconst middlewareEnhancer = applyMiddleware(...middleware);\r\nconst storeEnhancers = [middlewareEnhancer];\r\n\r\nconst store = createStore(rootReducer, ...storeEnhancers);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n  if (module.hot) {\r\n    module.hot.accept('../reducers', () => {\r\n      const newRootReducer = require('../reducers').default;\r\n      store.replaceReducer(newRootReducer);\r\n    });\r\n  }\r\n}\r\n\r\nexport default store;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport store from './redux/store';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst rootEl = document.getElementById('root');\r\n\r\nconst renderApp = (Component) => render(\r\n  <Provider store={store}>\r\n    <Component />\r\n  </Provider>,\r\n  rootEl,\r\n);\r\n\r\nrenderApp(App);\r\n\r\nif (module.hot) module.hot.accept(App, () => renderApp(App));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}